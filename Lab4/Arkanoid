#!/bin/bash
board=◄▬▬▬▬▬▬▬▬▬▬▬► 
board2=◄▬▬▬▬▬▬▬▬▬▬▬► 
w=$(tput cols)
h=$(tput lines)
(( h = h > 42 ? 42 : h -1 ))

max_speed=3
whitespace=`printf "%0.s " $(seq $w)`
len=${#board}
len2=${#board2}
vel_x=1
vel_y=-1
pos_x=3
pos_y=3
pos=$h
pos2=3
draw_board() 
{
	echo -en "\033[${h};${pos}H          $whitespace       "
	(( pos += $1 ))
	(( pos = pos < 1 ? 1 : pos > w - len ? w - len : pos ))
	echo -en "\033[${h};${pos}H$board"
}
draw_board2() 
{
	echo -en "\033[${10};${pos2}H         $whitespace         "
	(( pos2 += $1 ))
	(( pos2 = pos2 < 1 ? 1 : pos2 > w - len2 ? w - len2 : pos2 ))
	echo -en "\033[${10};${pos2}H$board2"
}
tput civis
tput clear
echo
draw_board 1
draw_board2 1
while [[ $q != q ]]; do
	echo -e "\033[${pos_y};${pos_x}H● "
	read -n 1 -s -t 0.15 q
	case "$q" in 
		[aA] ) draw_board -3;;
		[dD] ) draw_board  3;;
		[nN] ) draw_board2 -3;;
		[mM] ) draw_board2  3;; 
	esac
	echo -e "\033[${pos_y};${pos_x}H  "

	(( pos_x > w || pos_x + vel_x <= 0 )) && (( vel_x = - vel_x ))
   	(( pos_y < 3 || pos_y > h - 2)) && (( vel_y = - vel_y ))
    	if (( pos_y > h-2  || pos_y < 3)); then
		if (( pos_x >= pos && pos_x <= pos + len )); then
			(( vel_x = pos_x - pos - len / 2 ))	
        	else
			pos_x=1
			pos_y=2
			vel_y=1
			vel_x=1
        	fi
    	fi
	(( pos_x += vel_x ))
	(( pos_y += vel_y ))

done
tput cnorm
